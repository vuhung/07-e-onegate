/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.vportal.portlet.vcms.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.impl.BaseModelImpl;

import com.vportal.portlet.vcms.model.VcmsAttachedMessage;
import com.vportal.portlet.vcms.model.VcmsAttachedMessageModel;
import com.vportal.portlet.vcms.model.VcmsAttachedMessageSoap;

import java.io.Serializable;

import java.lang.reflect.Proxy;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * The base model implementation for the VcmsAttachedMessage service. Represents a row in the &quot;VcmsAttachedMessage&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.vportal.portlet.vcms.model.VcmsAttachedMessageModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VcmsAttachedMessageImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this class directly. All methods that expect a vcms attached message model instance should use the {@link com.vportal.portlet.vcms.model.VcmsAttachedMessage} interface instead.
 * </p>
 *
 * @author HOAN
 * @see VcmsAttachedMessageImpl
 * @see com.vportal.portlet.vcms.model.VcmsAttachedMessage
 * @see com.vportal.portlet.vcms.model.VcmsAttachedMessageModel
 * @generated
 */
public class VcmsAttachedMessageModelImpl extends BaseModelImpl<VcmsAttachedMessage>
	implements VcmsAttachedMessageModel {
	public static final String TABLE_NAME = "VcmsAttachedMessage";
	public static final Object[][] TABLE_COLUMNS = {
			{ "messageId", new Integer(Types.VARCHAR) },
			{ "groupId", new Integer(Types.BIGINT) },
			{ "companyId", new Integer(Types.BIGINT) },
			{ "createdDate", new Integer(Types.TIMESTAMP) },
			{ "createdByUser", new Integer(Types.VARCHAR) },
			{ "articleId", new Integer(Types.VARCHAR) },
			{ "content", new Integer(Types.VARCHAR) },
			{ "readMessage", new Integer(Types.BOOLEAN) }
		};
	public static final String TABLE_SQL_CREATE = "create table VcmsAttachedMessage (messageId VARCHAR(75) not null primary key,groupId LONG,companyId LONG,createdDate DATE null,createdByUser VARCHAR(200) null,articleId VARCHAR(200) null,content VARCHAR(2000) null,readMessage BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table VcmsAttachedMessage";
	public static final String ORDER_BY_JPQL = " ORDER BY vcmsAttachedMessage.createdDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY VcmsAttachedMessage.createdDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.vportal.portlet.vcms.model.VcmsAttachedMessage"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.vportal.portlet.vcms.model.VcmsAttachedMessage"),
			true);

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static VcmsAttachedMessage toModel(VcmsAttachedMessageSoap soapModel) {
		VcmsAttachedMessage model = new VcmsAttachedMessageImpl();

		model.setMessageId(soapModel.getMessageId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setCreatedDate(soapModel.getCreatedDate());
		model.setCreatedByUser(soapModel.getCreatedByUser());
		model.setArticleId(soapModel.getArticleId());
		model.setContent(soapModel.getContent());
		model.setReadMessage(soapModel.getReadMessage());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<VcmsAttachedMessage> toModels(
		VcmsAttachedMessageSoap[] soapModels) {
		List<VcmsAttachedMessage> models = new ArrayList<VcmsAttachedMessage>(soapModels.length);

		for (VcmsAttachedMessageSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.vportal.portlet.vcms.model.VcmsAttachedMessage"));

	public VcmsAttachedMessageModelImpl() {
	}

	public String getPrimaryKey() {
		return _messageId;
	}

	public void setPrimaryKey(String pk) {
		setMessageId(pk);
	}

	public Serializable getPrimaryKeyObj() {
		return _messageId;
	}

	public String getMessageId() {
		if (_messageId == null) {
			return StringPool.BLANK;
		}
		else {
			return _messageId;
		}
	}

	public void setMessageId(String messageId) {
		_messageId = messageId;
	}

	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	public Date getCreatedDate() {
		return _createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	public String getCreatedByUser() {
		if (_createdByUser == null) {
			return StringPool.BLANK;
		}
		else {
			return _createdByUser;
		}
	}

	public void setCreatedByUser(String createdByUser) {
		_createdByUser = createdByUser;
	}

	public String getArticleId() {
		if (_articleId == null) {
			return StringPool.BLANK;
		}
		else {
			return _articleId;
		}
	}

	public void setArticleId(String articleId) {
		_articleId = articleId;
	}

	public String getContent() {
		if (_content == null) {
			return StringPool.BLANK;
		}
		else {
			return _content;
		}
	}

	public void setContent(String content) {
		_content = content;
	}

	public boolean getReadMessage() {
		return _readMessage;
	}

	public boolean isReadMessage() {
		return _readMessage;
	}

	public void setReadMessage(boolean readMessage) {
		_readMessage = readMessage;
	}

	public VcmsAttachedMessage toEscapedModel() {
		if (isEscapedModel()) {
			return (VcmsAttachedMessage)this;
		}
		else {
			return (VcmsAttachedMessage)Proxy.newProxyInstance(VcmsAttachedMessage.class.getClassLoader(),
				new Class[] { VcmsAttachedMessage.class },
				new AutoEscapeBeanHandler(this));
		}
	}

	public Object clone() {
		VcmsAttachedMessageImpl vcmsAttachedMessageImpl = new VcmsAttachedMessageImpl();

		vcmsAttachedMessageImpl.setMessageId(getMessageId());

		vcmsAttachedMessageImpl.setGroupId(getGroupId());

		vcmsAttachedMessageImpl.setCompanyId(getCompanyId());

		vcmsAttachedMessageImpl.setCreatedDate(getCreatedDate());

		vcmsAttachedMessageImpl.setCreatedByUser(getCreatedByUser());

		vcmsAttachedMessageImpl.setArticleId(getArticleId());

		vcmsAttachedMessageImpl.setContent(getContent());

		vcmsAttachedMessageImpl.setReadMessage(getReadMessage());

		return vcmsAttachedMessageImpl;
	}

	public int compareTo(VcmsAttachedMessage vcmsAttachedMessage) {
		int value = 0;

		value = DateUtil.compareTo(getCreatedDate(),
				vcmsAttachedMessage.getCreatedDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		VcmsAttachedMessage vcmsAttachedMessage = null;

		try {
			vcmsAttachedMessage = (VcmsAttachedMessage)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		String pk = vcmsAttachedMessage.getPrimaryKey();

		if (getPrimaryKey().equals(pk)) {
			return true;
		}
		else {
			return false;
		}
	}

	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{messageId=");
		sb.append(getMessageId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", createdByUser=");
		sb.append(getCreatedByUser());
		sb.append(", articleId=");
		sb.append(getArticleId());
		sb.append(", content=");
		sb.append(getContent());
		sb.append(", readMessage=");
		sb.append(getReadMessage());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("com.vportal.portlet.vcms.model.VcmsAttachedMessage");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>messageId</column-name><column-value><![CDATA[");
		sb.append(getMessageId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdByUser</column-name><column-value><![CDATA[");
		sb.append(getCreatedByUser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>articleId</column-name><column-value><![CDATA[");
		sb.append(getArticleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>content</column-name><column-value><![CDATA[");
		sb.append(getContent());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>readMessage</column-name><column-value><![CDATA[");
		sb.append(getReadMessage());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private String _messageId;
	private long _groupId;
	private long _companyId;
	private Date _createdDate;
	private String _createdByUser;
	private String _articleId;
	private String _content;
	private boolean _readMessage;
}