/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.vportal.portlet.vclip.service.base;

import com.liferay.counter.service.CounterLocalService;

import com.liferay.portal.kernel.annotation.BeanReference;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.ResourceLocalService;
import com.liferay.portal.service.ResourceService;
import com.liferay.portal.service.UserLocalService;
import com.liferay.portal.service.UserService;
import com.liferay.portal.service.base.PrincipalBean;
import com.liferay.portal.service.persistence.ResourcePersistence;
import com.liferay.portal.service.persistence.UserPersistence;

import com.vportal.portlet.vclip.service.ClipLocalService;
import com.vportal.portlet.vclip.service.ClipService;
import com.vportal.portlet.vclip.service.ClipTypeLocalService;
import com.vportal.portlet.vclip.service.ClipTypeService;
import com.vportal.portlet.vclip.service.persistence.ClipFinder;
import com.vportal.portlet.vclip.service.persistence.ClipPersistence;
import com.vportal.portlet.vclip.service.persistence.ClipTypeFinder;
import com.vportal.portlet.vclip.service.persistence.ClipTypePersistence;

import javax.sql.DataSource;

/**
 * The base implementation of the clip type remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.vportal.portlet.vclip.service.impl.ClipTypeServiceImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this class directly. Always use {@link com.vportal.portlet.vclip.service.ClipTypeServiceUtil} to access the clip type remote service.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see com.vportal.portlet.vclip.service.impl.ClipTypeServiceImpl
 * @see com.vportal.portlet.vclip.service.ClipTypeServiceUtil
 * @generated
 */
public abstract class ClipTypeServiceBaseImpl extends PrincipalBean
	implements ClipTypeService {
	/**
	 * Gets the clip type local service.
	 *
	 * @return the clip type local service
	 */
	public ClipTypeLocalService getClipTypeLocalService() {
		return clipTypeLocalService;
	}

	/**
	 * Sets the clip type local service.
	 *
	 * @param clipTypeLocalService the clip type local service
	 */
	public void setClipTypeLocalService(
		ClipTypeLocalService clipTypeLocalService) {
		this.clipTypeLocalService = clipTypeLocalService;
	}

	/**
	 * Gets the clip type remote service.
	 *
	 * @return the clip type remote service
	 */
	public ClipTypeService getClipTypeService() {
		return clipTypeService;
	}

	/**
	 * Sets the clip type remote service.
	 *
	 * @param clipTypeService the clip type remote service
	 */
	public void setClipTypeService(ClipTypeService clipTypeService) {
		this.clipTypeService = clipTypeService;
	}

	/**
	 * Gets the clip type persistence.
	 *
	 * @return the clip type persistence
	 */
	public ClipTypePersistence getClipTypePersistence() {
		return clipTypePersistence;
	}

	/**
	 * Sets the clip type persistence.
	 *
	 * @param clipTypePersistence the clip type persistence
	 */
	public void setClipTypePersistence(ClipTypePersistence clipTypePersistence) {
		this.clipTypePersistence = clipTypePersistence;
	}

	/**
	 * Gets the clip type finder.
	 *
	 * @return the clip type finder
	 */
	public ClipTypeFinder getClipTypeFinder() {
		return clipTypeFinder;
	}

	/**
	 * Sets the clip type finder.
	 *
	 * @param clipTypeFinder the clip type finder
	 */
	public void setClipTypeFinder(ClipTypeFinder clipTypeFinder) {
		this.clipTypeFinder = clipTypeFinder;
	}

	/**
	 * Gets the clip local service.
	 *
	 * @return the clip local service
	 */
	public ClipLocalService getClipLocalService() {
		return clipLocalService;
	}

	/**
	 * Sets the clip local service.
	 *
	 * @param clipLocalService the clip local service
	 */
	public void setClipLocalService(ClipLocalService clipLocalService) {
		this.clipLocalService = clipLocalService;
	}

	/**
	 * Gets the clip remote service.
	 *
	 * @return the clip remote service
	 */
	public ClipService getClipService() {
		return clipService;
	}

	/**
	 * Sets the clip remote service.
	 *
	 * @param clipService the clip remote service
	 */
	public void setClipService(ClipService clipService) {
		this.clipService = clipService;
	}

	/**
	 * Gets the clip persistence.
	 *
	 * @return the clip persistence
	 */
	public ClipPersistence getClipPersistence() {
		return clipPersistence;
	}

	/**
	 * Sets the clip persistence.
	 *
	 * @param clipPersistence the clip persistence
	 */
	public void setClipPersistence(ClipPersistence clipPersistence) {
		this.clipPersistence = clipPersistence;
	}

	/**
	 * Gets the clip finder.
	 *
	 * @return the clip finder
	 */
	public ClipFinder getClipFinder() {
		return clipFinder;
	}

	/**
	 * Sets the clip finder.
	 *
	 * @param clipFinder the clip finder
	 */
	public void setClipFinder(ClipFinder clipFinder) {
		this.clipFinder = clipFinder;
	}

	/**
	 * Gets the counter local service.
	 *
	 * @return the counter local service
	 */
	public CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Gets the resource local service.
	 *
	 * @return the resource local service
	 */
	public ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Gets the resource remote service.
	 *
	 * @return the resource remote service
	 */
	public ResourceService getResourceService() {
		return resourceService;
	}

	/**
	 * Sets the resource remote service.
	 *
	 * @param resourceService the resource remote service
	 */
	public void setResourceService(ResourceService resourceService) {
		this.resourceService = resourceService;
	}

	/**
	 * Gets the resource persistence.
	 *
	 * @return the resource persistence
	 */
	public ResourcePersistence getResourcePersistence() {
		return resourcePersistence;
	}

	/**
	 * Sets the resource persistence.
	 *
	 * @param resourcePersistence the resource persistence
	 */
	public void setResourcePersistence(ResourcePersistence resourcePersistence) {
		this.resourcePersistence = resourcePersistence;
	}

	/**
	 * Gets the user local service.
	 *
	 * @return the user local service
	 */
	public UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Gets the user remote service.
	 *
	 * @return the user remote service
	 */
	public UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(UserService userService) {
		this.userService = userService;
	}

	/**
	 * Gets the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query to perform
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = clipTypePersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = ClipTypeLocalService.class)
	protected ClipTypeLocalService clipTypeLocalService;
	@BeanReference(type = ClipTypeService.class)
	protected ClipTypeService clipTypeService;
	@BeanReference(type = ClipTypePersistence.class)
	protected ClipTypePersistence clipTypePersistence;
	@BeanReference(type = ClipTypeFinder.class)
	protected ClipTypeFinder clipTypeFinder;
	@BeanReference(type = ClipLocalService.class)
	protected ClipLocalService clipLocalService;
	@BeanReference(type = ClipService.class)
	protected ClipService clipService;
	@BeanReference(type = ClipPersistence.class)
	protected ClipPersistence clipPersistence;
	@BeanReference(type = ClipFinder.class)
	protected ClipFinder clipFinder;
	@BeanReference(type = CounterLocalService.class)
	protected CounterLocalService counterLocalService;
	@BeanReference(type = ResourceLocalService.class)
	protected ResourceLocalService resourceLocalService;
	@BeanReference(type = ResourceService.class)
	protected ResourceService resourceService;
	@BeanReference(type = ResourcePersistence.class)
	protected ResourcePersistence resourcePersistence;
	@BeanReference(type = UserLocalService.class)
	protected UserLocalService userLocalService;
	@BeanReference(type = UserService.class)
	protected UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
}