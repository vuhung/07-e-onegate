/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.vportal.portal.model;

import com.liferay.portal.kernel.annotation.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the Attachment service. Represents a row in the &quot;Attachment&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.vportal.portal.model.impl.AttachmentModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.vportal.portal.model.impl.AttachmentImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this interface directly. All methods that expect a attachment model instance should use the {@link Attachment} interface instead.
 * </p>
 *
 * @author HOAN
 * @see Attachment
 * @see com.vportal.portal.model.impl.AttachmentImpl
 * @see com.vportal.portal.model.impl.AttachmentModelImpl
 * @generated
 */
public interface AttachmentModel extends BaseModel<Attachment> {
	/**
	 * Gets the primary key of this attachment.
	 *
	 * @return the primary key of this attachment
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this attachment
	 *
	 * @param pk the primary key of this attachment
	 */
	public void setPrimaryKey(long pk);

	/**
	 * Gets the attachment id of this attachment.
	 *
	 * @return the attachment id of this attachment
	 */
	public long getAttachmentId();

	/**
	 * Sets the attachment id of this attachment.
	 *
	 * @param attachmentId the attachment id of this attachment
	 */
	public void setAttachmentId(long attachmentId);

	/**
	 * Gets the group id of this attachment.
	 *
	 * @return the group id of this attachment
	 */
	public long getGroupId();

	/**
	 * Sets the group id of this attachment.
	 *
	 * @param groupId the group id of this attachment
	 */
	public void setGroupId(long groupId);

	/**
	 * Gets the company id of this attachment.
	 *
	 * @return the company id of this attachment
	 */
	public long getCompanyId();

	/**
	 * Sets the company id of this attachment.
	 *
	 * @param companyId the company id of this attachment
	 */
	public void setCompanyId(long companyId);

	/**
	 * Gets the entry id of this attachment.
	 *
	 * @return the entry id of this attachment
	 */
	public long getEntryId();

	/**
	 * Sets the entry id of this attachment.
	 *
	 * @param entryId the entry id of this attachment
	 */
	public void setEntryId(long entryId);

	/**
	 * Gets the entry class of this attachment.
	 *
	 * @return the entry class of this attachment
	 */
	@AutoEscape
	public String getEntryClass();

	/**
	 * Sets the entry class of this attachment.
	 *
	 * @param entryClass the entry class of this attachment
	 */
	public void setEntryClass(String entryClass);

	/**
	 * Gets the file entry id of this attachment.
	 *
	 * @return the file entry id of this attachment
	 */
	public long getFileEntryId();

	/**
	 * Sets the file entry id of this attachment.
	 *
	 * @param fileEntryId the file entry id of this attachment
	 */
	public void setFileEntryId(long fileEntryId);

	/**
	 * Gets the folder id of this attachment.
	 *
	 * @return the folder id of this attachment
	 */
	public long getFolderId();

	/**
	 * Sets the folder id of this attachment.
	 *
	 * @param folderId the folder id of this attachment
	 */
	public void setFolderId(long folderId);

	/**
	 * Gets the file name of this attachment.
	 *
	 * @return the file name of this attachment
	 */
	@AutoEscape
	public String getFileName();

	/**
	 * Sets the file name of this attachment.
	 *
	 * @param fileName the file name of this attachment
	 */
	public void setFileName(String fileName);

	/**
	 * Gets the image id of this attachment.
	 *
	 * @return the image id of this attachment
	 */
	public long getImageId();

	/**
	 * Sets the image id of this attachment.
	 *
	 * @param imageId the image id of this attachment
	 */
	public void setImageId(long imageId);

	/**
	 * Gets the extension of this attachment.
	 *
	 * @return the extension of this attachment
	 */
	@AutoEscape
	public String getExtension();

	/**
	 * Sets the extension of this attachment.
	 *
	 * @param extension the extension of this attachment
	 */
	public void setExtension(String extension);

	/**
	 * Gets a copy of this attachment as an escaped model instance by wrapping it with an {@link com.liferay.portal.kernel.bean.AutoEscapeBeanHandler}.
	 *
	 * @return the escaped model instance
	 * @see com.liferay.portal.kernel.bean.AutoEscapeBeanHandler
	 */
	public Attachment toEscapedModel();

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public void setEscapedModel(boolean escapedModel);

	public Serializable getPrimaryKeyObj();

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(Attachment attachment);

	public int hashCode();

	public String toString();

	public String toXmlString();
}