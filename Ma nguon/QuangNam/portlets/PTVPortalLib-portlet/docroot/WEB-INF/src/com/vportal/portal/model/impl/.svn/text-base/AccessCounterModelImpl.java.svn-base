/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.vportal.portal.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.vportal.portal.model.AccessCounter;
import com.vportal.portal.model.AccessCounterModel;
import com.vportal.portal.model.AccessCounterSoap;

import java.io.Serializable;

import java.lang.reflect.Proxy;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * The base model implementation for the AccessCounter service. Represents a row in the &quot;AccessCounter&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.vportal.portal.model.AccessCounterModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AccessCounterImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this class directly. All methods that expect a access counter model instance should use the {@link com.vportal.portal.model.AccessCounter} interface instead.
 * </p>
 *
 * @author HOAN
 * @see AccessCounterImpl
 * @see com.vportal.portal.model.AccessCounter
 * @see com.vportal.portal.model.AccessCounterModel
 * @generated
 */
public class AccessCounterModelImpl extends BaseModelImpl<AccessCounter>
	implements AccessCounterModel {
	public static final String TABLE_NAME = "AccessCounter";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", new Integer(Types.BIGINT) },
			{ "companyId", new Integer(Types.BIGINT) },
			{ "accessDate", new Integer(Types.TIMESTAMP) },
			{ "accessCount", new Integer(Types.INTEGER) }
		};
	public static final String TABLE_SQL_CREATE = "create table AccessCounter (id_ LONG not null primary key,companyId LONG,accessDate DATE null,accessCount INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table AccessCounter";
	public static final String ORDER_BY_JPQL = " ORDER BY accessCounter.accessDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY AccessCounter.accessDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.vportal.portal.model.AccessCounter"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.vportal.portal.model.AccessCounter"),
			true);

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static AccessCounter toModel(AccessCounterSoap soapModel) {
		AccessCounter model = new AccessCounterImpl();

		model.setId(soapModel.getId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setAccessDate(soapModel.getAccessDate());
		model.setAccessCount(soapModel.getAccessCount());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<AccessCounter> toModels(AccessCounterSoap[] soapModels) {
		List<AccessCounter> models = new ArrayList<AccessCounter>(soapModels.length);

		for (AccessCounterSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.vportal.portal.model.AccessCounter"));

	public AccessCounterModelImpl() {
	}

	public long getPrimaryKey() {
		return _id;
	}

	public void setPrimaryKey(long pk) {
		setId(pk);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_id);
	}

	public long getId() {
		return _id;
	}

	public void setId(long id) {
		_id = id;
	}

	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	public Date getAccessDate() {
		return _accessDate;
	}

	public void setAccessDate(Date accessDate) {
		if (_originalAccessDate == null) {
			_originalAccessDate = _accessDate;
		}

		_accessDate = accessDate;
	}

	public Date getOriginalAccessDate() {
		return _originalAccessDate;
	}

	public int getAccessCount() {
		return _accessCount;
	}

	public void setAccessCount(int accessCount) {
		_accessCount = accessCount;
	}

	public AccessCounter toEscapedModel() {
		if (isEscapedModel()) {
			return (AccessCounter)this;
		}
		else {
			return (AccessCounter)Proxy.newProxyInstance(AccessCounter.class.getClassLoader(),
				new Class[] { AccessCounter.class },
				new AutoEscapeBeanHandler(this));
		}
	}

	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
					AccessCounter.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	public Object clone() {
		AccessCounterImpl accessCounterImpl = new AccessCounterImpl();

		accessCounterImpl.setId(getId());

		accessCounterImpl.setCompanyId(getCompanyId());

		AccessCounterModelImpl accessCounterModelImpl = accessCounterImpl;

		accessCounterModelImpl._originalCompanyId = accessCounterModelImpl._companyId;

		accessCounterModelImpl._setOriginalCompanyId = false;
		accessCounterImpl.setAccessDate(getAccessDate());

		accessCounterModelImpl._originalAccessDate = accessCounterModelImpl._accessDate;

		accessCounterImpl.setAccessCount(getAccessCount());

		return accessCounterImpl;
	}

	public int compareTo(AccessCounter accessCounter) {
		int value = 0;

		value = DateUtil.compareTo(getAccessDate(),
				accessCounter.getAccessDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		AccessCounter accessCounter = null;

		try {
			accessCounter = (AccessCounter)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long pk = accessCounter.getPrimaryKey();

		if (getPrimaryKey() == pk) {
			return true;
		}
		else {
			return false;
		}
	}

	public int hashCode() {
		return (int)getPrimaryKey();
	}

	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", accessDate=");
		sb.append(getAccessDate());
		sb.append(", accessCount=");
		sb.append(getAccessCount());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("com.vportal.portal.model.AccessCounter");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accessDate</column-name><column-value><![CDATA[");
		sb.append(getAccessDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accessCount</column-name><column-value><![CDATA[");
		sb.append(getAccessCount());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private long _id;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private Date _accessDate;
	private Date _originalAccessDate;
	private int _accessCount;
	private transient ExpandoBridge _expandoBridge;
}