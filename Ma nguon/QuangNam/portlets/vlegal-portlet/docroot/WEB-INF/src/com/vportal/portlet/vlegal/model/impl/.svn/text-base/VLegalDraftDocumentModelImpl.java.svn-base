/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.vportal.portlet.vlegal.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.util.PortalUtil;

import com.vportal.portlet.vlegal.model.VLegalDraftDocument;
import com.vportal.portlet.vlegal.model.VLegalDraftDocumentModel;
import com.vportal.portlet.vlegal.model.VLegalDraftDocumentSoap;

import java.io.Serializable;

import java.lang.reflect.Proxy;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * The base model implementation for the VLegalDraftDocument service. Represents a row in the &quot;VLegalDraftDocument&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.vportal.portlet.vlegal.model.VLegalDraftDocumentModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VLegalDraftDocumentImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this class directly. All methods that expect a v legal draft document model instance should use the {@link com.vportal.portlet.vlegal.model.VLegalDraftDocument} interface instead.
 * </p>
 *
 * @author ACB
 * @see VLegalDraftDocumentImpl
 * @see com.vportal.portlet.vlegal.model.VLegalDraftDocument
 * @see com.vportal.portlet.vlegal.model.VLegalDraftDocumentModel
 * @generated
 */
public class VLegalDraftDocumentModelImpl extends BaseModelImpl<VLegalDraftDocument>
	implements VLegalDraftDocumentModel {
	public static final String TABLE_NAME = "VLegalDraftDocument";
	public static final Object[][] TABLE_COLUMNS = {
			{ "draftId", new Integer(Types.VARCHAR) },
			{ "groupId", new Integer(Types.BIGINT) },
			{ "companyId", new Integer(Types.BIGINT) },
			{ "userId", new Integer(Types.BIGINT) },
			{ "createdByUser", new Integer(Types.BIGINT) },
			{ "createdDate", new Integer(Types.TIMESTAMP) },
			{ "modifiedByUser", new Integer(Types.BIGINT) },
			{ "modifiedDate", new Integer(Types.TIMESTAMP) },
			{ "approvedByUser", new Integer(Types.BIGINT) },
			{ "approvedDate", new Integer(Types.TIMESTAMP) },
			{ "publishedByUser", new Integer(Types.BIGINT) },
			{ "publishedDate", new Integer(Types.TIMESTAMP) },
			{ "title", new Integer(Types.VARCHAR) },
			{ "expiredDate", new Integer(Types.TIMESTAMP) },
			{ "language", new Integer(Types.VARCHAR) },
			{ "content", new Integer(Types.VARCHAR) },
			{ "typeId", new Integer(Types.VARCHAR) },
			{ "fieldId", new Integer(Types.VARCHAR) },
			{ "hasAttachment", new Integer(Types.BOOLEAN) },
			{ "draftLevel", new Integer(Types.INTEGER) },
			{ "docCode", new Integer(Types.VARCHAR) },
			{ "statusDraft", new Integer(Types.INTEGER) }
		};
	public static final String TABLE_SQL_CREATE = "create table VLegalDraftDocument (draftId VARCHAR(75) not null primary key,groupId LONG,companyId LONG,userId LONG,createdByUser LONG,createdDate DATE null,modifiedByUser LONG,modifiedDate DATE null,approvedByUser LONG,approvedDate DATE null,publishedByUser LONG,publishedDate DATE null,title VARCHAR(75) null,expiredDate DATE null,language VARCHAR(75) null,content VARCHAR(75) null,typeId VARCHAR(75) null,fieldId VARCHAR(75) null,hasAttachment BOOLEAN,draftLevel INTEGER,docCode VARCHAR(75) null,statusDraft INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table VLegalDraftDocument";
	public static final String ORDER_BY_JPQL = " ORDER BY vLegalDraftDocument.createdDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY VLegalDraftDocument.createdDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.vportal.portlet.vlegal.model.VLegalDraftDocument"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.vportal.portlet.vlegal.model.VLegalDraftDocument"),
			true);

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static VLegalDraftDocument toModel(VLegalDraftDocumentSoap soapModel) {
		VLegalDraftDocument model = new VLegalDraftDocumentImpl();

		model.setDraftId(soapModel.getDraftId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setCreatedByUser(soapModel.getCreatedByUser());
		model.setCreatedDate(soapModel.getCreatedDate());
		model.setModifiedByUser(soapModel.getModifiedByUser());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setApprovedByUser(soapModel.getApprovedByUser());
		model.setApprovedDate(soapModel.getApprovedDate());
		model.setPublishedByUser(soapModel.getPublishedByUser());
		model.setPublishedDate(soapModel.getPublishedDate());
		model.setTitle(soapModel.getTitle());
		model.setExpiredDate(soapModel.getExpiredDate());
		model.setLanguage(soapModel.getLanguage());
		model.setContent(soapModel.getContent());
		model.setTypeId(soapModel.getTypeId());
		model.setFieldId(soapModel.getFieldId());
		model.setHasAttachment(soapModel.getHasAttachment());
		model.setDraftLevel(soapModel.getDraftLevel());
		model.setDocCode(soapModel.getDocCode());
		model.setStatusDraft(soapModel.getStatusDraft());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<VLegalDraftDocument> toModels(
		VLegalDraftDocumentSoap[] soapModels) {
		List<VLegalDraftDocument> models = new ArrayList<VLegalDraftDocument>(soapModels.length);

		for (VLegalDraftDocumentSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.vportal.portlet.vlegal.model.VLegalDraftDocument"));

	public VLegalDraftDocumentModelImpl() {
	}

	public String getPrimaryKey() {
		return _draftId;
	}

	public void setPrimaryKey(String pk) {
		setDraftId(pk);
	}

	public Serializable getPrimaryKeyObj() {
		return _draftId;
	}

	public String getDraftId() {
		if (_draftId == null) {
			return StringPool.BLANK;
		}
		else {
			return _draftId;
		}
	}

	public void setDraftId(String draftId) {
		if (_originalDraftId == null) {
			_originalDraftId = _draftId;
		}

		_draftId = draftId;
	}

	public String getOriginalDraftId() {
		return GetterUtil.getString(_originalDraftId);
	}

	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getCreatedByUser() {
		return _createdByUser;
	}

	public void setCreatedByUser(long createdByUser) {
		_createdByUser = createdByUser;
	}

	public Date getCreatedDate() {
		return _createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	public long getModifiedByUser() {
		return _modifiedByUser;
	}

	public void setModifiedByUser(long modifiedByUser) {
		_modifiedByUser = modifiedByUser;
	}

	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public long getApprovedByUser() {
		return _approvedByUser;
	}

	public void setApprovedByUser(long approvedByUser) {
		_approvedByUser = approvedByUser;
	}

	public Date getApprovedDate() {
		return _approvedDate;
	}

	public void setApprovedDate(Date approvedDate) {
		_approvedDate = approvedDate;
	}

	public long getPublishedByUser() {
		return _publishedByUser;
	}

	public void setPublishedByUser(long publishedByUser) {
		_publishedByUser = publishedByUser;
	}

	public Date getPublishedDate() {
		return _publishedDate;
	}

	public void setPublishedDate(Date publishedDate) {
		_publishedDate = publishedDate;
	}

	public String getTitle() {
		if (_title == null) {
			return StringPool.BLANK;
		}
		else {
			return _title;
		}
	}

	public void setTitle(String title) {
		_title = title;
	}

	public Date getExpiredDate() {
		return _expiredDate;
	}

	public void setExpiredDate(Date expiredDate) {
		_expiredDate = expiredDate;
	}

	public String getLanguage() {
		if (_language == null) {
			return StringPool.BLANK;
		}
		else {
			return _language;
		}
	}

	public void setLanguage(String language) {
		_language = language;
	}

	public String getContent() {
		if (_content == null) {
			return StringPool.BLANK;
		}
		else {
			return _content;
		}
	}

	public void setContent(String content) {
		_content = content;
	}

	public String getTypeId() {
		if (_typeId == null) {
			return StringPool.BLANK;
		}
		else {
			return _typeId;
		}
	}

	public void setTypeId(String typeId) {
		_typeId = typeId;
	}

	public String getFieldId() {
		if (_fieldId == null) {
			return StringPool.BLANK;
		}
		else {
			return _fieldId;
		}
	}

	public void setFieldId(String fieldId) {
		_fieldId = fieldId;
	}

	public boolean getHasAttachment() {
		return _hasAttachment;
	}

	public boolean isHasAttachment() {
		return _hasAttachment;
	}

	public void setHasAttachment(boolean hasAttachment) {
		_hasAttachment = hasAttachment;
	}

	public int getDraftLevel() {
		return _draftLevel;
	}

	public void setDraftLevel(int draftLevel) {
		_draftLevel = draftLevel;
	}

	public String getDocCode() {
		if (_docCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _docCode;
		}
	}

	public void setDocCode(String docCode) {
		_docCode = docCode;
	}

	public int getStatusDraft() {
		return _statusDraft;
	}

	public void setStatusDraft(int statusDraft) {
		_statusDraft = statusDraft;
	}

	public VLegalDraftDocument toEscapedModel() {
		if (isEscapedModel()) {
			return (VLegalDraftDocument)this;
		}
		else {
			return (VLegalDraftDocument)Proxy.newProxyInstance(VLegalDraftDocument.class.getClassLoader(),
				new Class[] { VLegalDraftDocument.class },
				new AutoEscapeBeanHandler(this));
		}
	}

	public Object clone() {
		VLegalDraftDocumentImpl vLegalDraftDocumentImpl = new VLegalDraftDocumentImpl();

		vLegalDraftDocumentImpl.setDraftId(getDraftId());

		VLegalDraftDocumentModelImpl vLegalDraftDocumentModelImpl = vLegalDraftDocumentImpl;

		vLegalDraftDocumentModelImpl._originalDraftId = vLegalDraftDocumentModelImpl._draftId;

		vLegalDraftDocumentImpl.setGroupId(getGroupId());

		vLegalDraftDocumentModelImpl._originalGroupId = vLegalDraftDocumentModelImpl._groupId;

		vLegalDraftDocumentModelImpl._setOriginalGroupId = false;
		vLegalDraftDocumentImpl.setCompanyId(getCompanyId());

		vLegalDraftDocumentImpl.setUserId(getUserId());

		vLegalDraftDocumentImpl.setCreatedByUser(getCreatedByUser());

		vLegalDraftDocumentImpl.setCreatedDate(getCreatedDate());

		vLegalDraftDocumentImpl.setModifiedByUser(getModifiedByUser());

		vLegalDraftDocumentImpl.setModifiedDate(getModifiedDate());

		vLegalDraftDocumentImpl.setApprovedByUser(getApprovedByUser());

		vLegalDraftDocumentImpl.setApprovedDate(getApprovedDate());

		vLegalDraftDocumentImpl.setPublishedByUser(getPublishedByUser());

		vLegalDraftDocumentImpl.setPublishedDate(getPublishedDate());

		vLegalDraftDocumentImpl.setTitle(getTitle());

		vLegalDraftDocumentImpl.setExpiredDate(getExpiredDate());

		vLegalDraftDocumentImpl.setLanguage(getLanguage());

		vLegalDraftDocumentImpl.setContent(getContent());

		vLegalDraftDocumentImpl.setTypeId(getTypeId());

		vLegalDraftDocumentImpl.setFieldId(getFieldId());

		vLegalDraftDocumentImpl.setHasAttachment(getHasAttachment());

		vLegalDraftDocumentImpl.setDraftLevel(getDraftLevel());

		vLegalDraftDocumentImpl.setDocCode(getDocCode());

		vLegalDraftDocumentImpl.setStatusDraft(getStatusDraft());

		return vLegalDraftDocumentImpl;
	}

	public int compareTo(VLegalDraftDocument vLegalDraftDocument) {
		int value = 0;

		value = DateUtil.compareTo(getCreatedDate(),
				vLegalDraftDocument.getCreatedDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		VLegalDraftDocument vLegalDraftDocument = null;

		try {
			vLegalDraftDocument = (VLegalDraftDocument)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		String pk = vLegalDraftDocument.getPrimaryKey();

		if (getPrimaryKey().equals(pk)) {
			return true;
		}
		else {
			return false;
		}
	}

	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	public String toString() {
		StringBundler sb = new StringBundler(45);

		sb.append("{draftId=");
		sb.append(getDraftId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createdByUser=");
		sb.append(getCreatedByUser());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", modifiedByUser=");
		sb.append(getModifiedByUser());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", approvedByUser=");
		sb.append(getApprovedByUser());
		sb.append(", approvedDate=");
		sb.append(getApprovedDate());
		sb.append(", publishedByUser=");
		sb.append(getPublishedByUser());
		sb.append(", publishedDate=");
		sb.append(getPublishedDate());
		sb.append(", title=");
		sb.append(getTitle());
		sb.append(", expiredDate=");
		sb.append(getExpiredDate());
		sb.append(", language=");
		sb.append(getLanguage());
		sb.append(", content=");
		sb.append(getContent());
		sb.append(", typeId=");
		sb.append(getTypeId());
		sb.append(", fieldId=");
		sb.append(getFieldId());
		sb.append(", hasAttachment=");
		sb.append(getHasAttachment());
		sb.append(", draftLevel=");
		sb.append(getDraftLevel());
		sb.append(", docCode=");
		sb.append(getDocCode());
		sb.append(", statusDraft=");
		sb.append(getStatusDraft());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(70);

		sb.append("<model><model-name>");
		sb.append("com.vportal.portlet.vlegal.model.VLegalDraftDocument");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>draftId</column-name><column-value><![CDATA[");
		sb.append(getDraftId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdByUser</column-name><column-value><![CDATA[");
		sb.append(getCreatedByUser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedByUser</column-name><column-value><![CDATA[");
		sb.append(getModifiedByUser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approvedByUser</column-name><column-value><![CDATA[");
		sb.append(getApprovedByUser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approvedDate</column-name><column-value><![CDATA[");
		sb.append(getApprovedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publishedByUser</column-name><column-value><![CDATA[");
		sb.append(getPublishedByUser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publishedDate</column-name><column-value><![CDATA[");
		sb.append(getPublishedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>title</column-name><column-value><![CDATA[");
		sb.append(getTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>expiredDate</column-name><column-value><![CDATA[");
		sb.append(getExpiredDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>language</column-name><column-value><![CDATA[");
		sb.append(getLanguage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>content</column-name><column-value><![CDATA[");
		sb.append(getContent());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>typeId</column-name><column-value><![CDATA[");
		sb.append(getTypeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fieldId</column-name><column-value><![CDATA[");
		sb.append(getFieldId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>hasAttachment</column-name><column-value><![CDATA[");
		sb.append(getHasAttachment());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>draftLevel</column-name><column-value><![CDATA[");
		sb.append(getDraftLevel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>docCode</column-name><column-value><![CDATA[");
		sb.append(getDocCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusDraft</column-name><column-value><![CDATA[");
		sb.append(getStatusDraft());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private String _draftId;
	private String _originalDraftId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private long _createdByUser;
	private Date _createdDate;
	private long _modifiedByUser;
	private Date _modifiedDate;
	private long _approvedByUser;
	private Date _approvedDate;
	private long _publishedByUser;
	private Date _publishedDate;
	private String _title;
	private Date _expiredDate;
	private String _language;
	private String _content;
	private String _typeId;
	private String _fieldId;
	private boolean _hasAttachment;
	private int _draftLevel;
	private String _docCode;
	private int _statusDraft;
}