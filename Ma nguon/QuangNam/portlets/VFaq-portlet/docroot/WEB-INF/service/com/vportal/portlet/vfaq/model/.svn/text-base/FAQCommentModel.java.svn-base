/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.vportal.portlet.vfaq.model;

import com.liferay.portal.kernel.annotation.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the FAQComment service. Represents a row in the &quot;FAQComment&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.vportal.portlet.vfaq.model.impl.FAQCommentModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.vportal.portlet.vfaq.model.impl.FAQCommentImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this interface directly. All methods that expect a f a q comment model instance should use the {@link FAQComment} interface instead.
 * </p>
 *
 * @author HOAN
 * @see FAQComment
 * @see com.vportal.portlet.vfaq.model.impl.FAQCommentImpl
 * @see com.vportal.portlet.vfaq.model.impl.FAQCommentModelImpl
 * @generated
 */
public interface FAQCommentModel extends BaseModel<FAQComment> {
	/**
	 * Gets the primary key of this f a q comment.
	 *
	 * @return the primary key of this f a q comment
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this f a q comment
	 *
	 * @param pk the primary key of this f a q comment
	 */
	public void setPrimaryKey(long pk);

	/**
	 * Gets the uuid of this f a q comment.
	 *
	 * @return the uuid of this f a q comment
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this f a q comment.
	 *
	 * @param uuid the uuid of this f a q comment
	 */
	public void setUuid(String uuid);

	/**
	 * Gets the id of this f a q comment.
	 *
	 * @return the id of this f a q comment
	 */
	public long getId();

	/**
	 * Sets the id of this f a q comment.
	 *
	 * @param id the id of this f a q comment
	 */
	public void setId(long id);

	/**
	 * Gets the answerid of this f a q comment.
	 *
	 * @return the answerid of this f a q comment
	 */
	public long getAnswerid();

	/**
	 * Sets the answerid of this f a q comment.
	 *
	 * @param answerid the answerid of this f a q comment
	 */
	public void setAnswerid(long answerid);

	/**
	 * Gets the content of this f a q comment.
	 *
	 * @return the content of this f a q comment
	 */
	@AutoEscape
	public String getContent();

	/**
	 * Sets the content of this f a q comment.
	 *
	 * @param content the content of this f a q comment
	 */
	public void setContent(String content);

	/**
	 * Gets the comm name of this f a q comment.
	 *
	 * @return the comm name of this f a q comment
	 */
	@AutoEscape
	public String getCommName();

	/**
	 * Sets the comm name of this f a q comment.
	 *
	 * @param commName the comm name of this f a q comment
	 */
	public void setCommName(String commName);

	/**
	 * Gets the comm email of this f a q comment.
	 *
	 * @return the comm email of this f a q comment
	 */
	@AutoEscape
	public String getCommEmail();

	/**
	 * Sets the comm email of this f a q comment.
	 *
	 * @param commEmail the comm email of this f a q comment
	 */
	public void setCommEmail(String commEmail);

	/**
	 * Gets the approved of this f a q comment.
	 *
	 * @return the approved of this f a q comment
	 */
	public boolean getApproved();

	/**
	 * Determines if this f a q comment is approved.
	 *
	 * @return <code>true</code> if this f a q comment is approved; <code>false</code> otherwise
	 */
	public boolean isApproved();

	/**
	 * Sets whether this {$entity.humanName} is approved.
	 *
	 * @param approved the approved of this f a q comment
	 */
	public void setApproved(boolean approved);

	/**
	 * Gets the approve by user of this f a q comment.
	 *
	 * @return the approve by user of this f a q comment
	 */
	@AutoEscape
	public String getApproveByUser();

	/**
	 * Sets the approve by user of this f a q comment.
	 *
	 * @param approveByUser the approve by user of this f a q comment
	 */
	public void setApproveByUser(String approveByUser);

	/**
	 * Gets the approved date of this f a q comment.
	 *
	 * @return the approved date of this f a q comment
	 */
	public Date getApprovedDate();

	/**
	 * Sets the approved date of this f a q comment.
	 *
	 * @param approvedDate the approved date of this f a q comment
	 */
	public void setApprovedDate(Date approvedDate);

	/**
	 * Gets the comm date of this f a q comment.
	 *
	 * @return the comm date of this f a q comment
	 */
	public Date getCommDate();

	/**
	 * Sets the comm date of this f a q comment.
	 *
	 * @param commDate the comm date of this f a q comment
	 */
	public void setCommDate(Date commDate);

	/**
	 * Gets the user id of this f a q comment.
	 *
	 * @return the user id of this f a q comment
	 */
	public long getUserId();

	/**
	 * Sets the user id of this f a q comment.
	 *
	 * @param userId the user id of this f a q comment
	 */
	public void setUserId(long userId);

	/**
	 * Gets the user uuid of this f a q comment.
	 *
	 * @return the user uuid of this f a q comment
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this f a q comment.
	 *
	 * @param userUuid the user uuid of this f a q comment
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Gets a copy of this f a q comment as an escaped model instance by wrapping it with an {@link com.liferay.portal.kernel.bean.AutoEscapeBeanHandler}.
	 *
	 * @return the escaped model instance
	 * @see com.liferay.portal.kernel.bean.AutoEscapeBeanHandler
	 */
	public FAQComment toEscapedModel();

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public void setEscapedModel(boolean escapedModel);

	public Serializable getPrimaryKeyObj();

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(FAQComment faqComment);

	public int hashCode();

	public String toString();

	public String toXmlString();
}