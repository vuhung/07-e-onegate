/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.vportal.portlet.vfaq.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.vportal.portlet.vfaq.model.FAQQuestion;
import com.vportal.portlet.vfaq.model.FAQQuestionModel;
import com.vportal.portlet.vfaq.model.FAQQuestionSoap;

import java.io.Serializable;

import java.lang.reflect.Proxy;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * The base model implementation for the FAQQuestion service. Represents a row in the &quot;FAQQuestion&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.vportal.portlet.vfaq.model.FAQQuestionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link FAQQuestionImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this class directly. All methods that expect a f a q question model instance should use the {@link com.vportal.portlet.vfaq.model.FAQQuestion} interface instead.
 * </p>
 *
 * @author HOAN
 * @see FAQQuestionImpl
 * @see com.vportal.portlet.vfaq.model.FAQQuestion
 * @see com.vportal.portlet.vfaq.model.FAQQuestionModel
 * @generated
 */
public class FAQQuestionModelImpl extends BaseModelImpl<FAQQuestion>
	implements FAQQuestionModel {
	public static final String TABLE_NAME = "FAQQuestion";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", new Integer(Types.VARCHAR) },
			{ "id_", new Integer(Types.BIGINT) },
			{ "title", new Integer(Types.VARCHAR) },
			{ "content", new Integer(Types.VARCHAR) },
			{ "language", new Integer(Types.VARCHAR) },
			{ "questionOrder", new Integer(Types.INTEGER) },
			{ "sentDate", new Integer(Types.TIMESTAMP) },
			{ "sentByUser", new Integer(Types.VARCHAR) },
			{ "senderEmail", new Integer(Types.VARCHAR) },
			{ "questionType", new Integer(Types.VARCHAR) },
			{ "modifiedByUser", new Integer(Types.VARCHAR) },
			{ "modifiedDate", new Integer(Types.TIMESTAMP) },
			{ "hitCount", new Integer(Types.INTEGER) },
			{ "approved", new Integer(Types.BOOLEAN) },
			{ "groupId", new Integer(Types.BIGINT) },
			{ "userId", new Integer(Types.BIGINT) }
		};
	public static final String TABLE_SQL_CREATE = "create table FAQQuestion (uuid_ VARCHAR(75) null,id_ LONG not null primary key,title VARCHAR(75) null,content VARCHAR(75) null,language VARCHAR(75) null,questionOrder INTEGER,sentDate DATE null,sentByUser VARCHAR(200) null,senderEmail VARCHAR(300) null,questionType VARCHAR(300) null,modifiedByUser VARCHAR(300) null,modifiedDate DATE null,hitCount INTEGER,approved BOOLEAN,groupId LONG,userId LONG)";
	public static final String TABLE_SQL_DROP = "drop table FAQQuestion";
	public static final String ORDER_BY_JPQL = " ORDER BY faqQuestion.sentDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY FAQQuestion.sentDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.vportal.portlet.vfaq.model.FAQQuestion"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.vportal.portlet.vfaq.model.FAQQuestion"),
			true);

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static FAQQuestion toModel(FAQQuestionSoap soapModel) {
		FAQQuestion model = new FAQQuestionImpl();

		model.setUuid(soapModel.getUuid());
		model.setId(soapModel.getId());
		model.setTitle(soapModel.getTitle());
		model.setContent(soapModel.getContent());
		model.setLanguage(soapModel.getLanguage());
		model.setQuestionOrder(soapModel.getQuestionOrder());
		model.setSentDate(soapModel.getSentDate());
		model.setSentByUser(soapModel.getSentByUser());
		model.setSenderEmail(soapModel.getSenderEmail());
		model.setQuestionType(soapModel.getQuestionType());
		model.setModifiedByUser(soapModel.getModifiedByUser());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setHitCount(soapModel.getHitCount());
		model.setApproved(soapModel.getApproved());
		model.setGroupId(soapModel.getGroupId());
		model.setUserId(soapModel.getUserId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<FAQQuestion> toModels(FAQQuestionSoap[] soapModels) {
		List<FAQQuestion> models = new ArrayList<FAQQuestion>(soapModels.length);

		for (FAQQuestionSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.vportal.portlet.vfaq.model.FAQQuestion"));

	public FAQQuestionModelImpl() {
	}

	public long getPrimaryKey() {
		return _id;
	}

	public void setPrimaryKey(long pk) {
		setId(pk);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_id);
	}

	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	public long getId() {
		return _id;
	}

	public void setId(long id) {
		if (!_setOriginalId) {
			_setOriginalId = true;

			_originalId = _id;
		}

		_id = id;
	}

	public long getOriginalId() {
		return _originalId;
	}

	public String getTitle() {
		if (_title == null) {
			return StringPool.BLANK;
		}
		else {
			return _title;
		}
	}

	public void setTitle(String title) {
		_title = title;
	}

	public String getContent() {
		if (_content == null) {
			return StringPool.BLANK;
		}
		else {
			return _content;
		}
	}

	public void setContent(String content) {
		_content = content;
	}

	public String getLanguage() {
		if (_language == null) {
			return StringPool.BLANK;
		}
		else {
			return _language;
		}
	}

	public void setLanguage(String language) {
		_language = language;
	}

	public int getQuestionOrder() {
		return _questionOrder;
	}

	public void setQuestionOrder(int questionOrder) {
		_questionOrder = questionOrder;
	}

	public Date getSentDate() {
		return _sentDate;
	}

	public void setSentDate(Date sentDate) {
		_sentDate = sentDate;
	}

	public String getSentByUser() {
		if (_sentByUser == null) {
			return StringPool.BLANK;
		}
		else {
			return _sentByUser;
		}
	}

	public void setSentByUser(String sentByUser) {
		_sentByUser = sentByUser;
	}

	public String getSenderEmail() {
		if (_senderEmail == null) {
			return StringPool.BLANK;
		}
		else {
			return _senderEmail;
		}
	}

	public void setSenderEmail(String senderEmail) {
		_senderEmail = senderEmail;
	}

	public String getQuestionType() {
		if (_questionType == null) {
			return StringPool.BLANK;
		}
		else {
			return _questionType;
		}
	}

	public void setQuestionType(String questionType) {
		_questionType = questionType;
	}

	public String getModifiedByUser() {
		if (_modifiedByUser == null) {
			return StringPool.BLANK;
		}
		else {
			return _modifiedByUser;
		}
	}

	public void setModifiedByUser(String modifiedByUser) {
		_modifiedByUser = modifiedByUser;
	}

	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public int getHitCount() {
		return _hitCount;
	}

	public void setHitCount(int hitCount) {
		_hitCount = hitCount;
	}

	public boolean getApproved() {
		return _approved;
	}

	public boolean isApproved() {
		return _approved;
	}

	public void setApproved(boolean approved) {
		_approved = approved;
	}

	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public FAQQuestion toEscapedModel() {
		if (isEscapedModel()) {
			return (FAQQuestion)this;
		}
		else {
			return (FAQQuestion)Proxy.newProxyInstance(FAQQuestion.class.getClassLoader(),
				new Class[] { FAQQuestion.class },
				new AutoEscapeBeanHandler(this));
		}
	}

	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(0,
					FAQQuestion.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	public Object clone() {
		FAQQuestionImpl faqQuestionImpl = new FAQQuestionImpl();

		faqQuestionImpl.setUuid(getUuid());

		FAQQuestionModelImpl faqQuestionModelImpl = faqQuestionImpl;

		faqQuestionModelImpl._originalUuid = faqQuestionModelImpl._uuid;

		faqQuestionImpl.setId(getId());

		faqQuestionModelImpl._originalId = faqQuestionModelImpl._id;

		faqQuestionModelImpl._setOriginalId = false;
		faqQuestionImpl.setTitle(getTitle());

		faqQuestionImpl.setContent(getContent());

		faqQuestionImpl.setLanguage(getLanguage());

		faqQuestionImpl.setQuestionOrder(getQuestionOrder());

		faqQuestionImpl.setSentDate(getSentDate());

		faqQuestionImpl.setSentByUser(getSentByUser());

		faqQuestionImpl.setSenderEmail(getSenderEmail());

		faqQuestionImpl.setQuestionType(getQuestionType());

		faqQuestionImpl.setModifiedByUser(getModifiedByUser());

		faqQuestionImpl.setModifiedDate(getModifiedDate());

		faqQuestionImpl.setHitCount(getHitCount());

		faqQuestionImpl.setApproved(getApproved());

		faqQuestionImpl.setGroupId(getGroupId());

		faqQuestionModelImpl._originalGroupId = faqQuestionModelImpl._groupId;

		faqQuestionModelImpl._setOriginalGroupId = false;
		faqQuestionImpl.setUserId(getUserId());

		return faqQuestionImpl;
	}

	public int compareTo(FAQQuestion faqQuestion) {
		int value = 0;

		value = DateUtil.compareTo(getSentDate(), faqQuestion.getSentDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		FAQQuestion faqQuestion = null;

		try {
			faqQuestion = (FAQQuestion)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long pk = faqQuestion.getPrimaryKey();

		if (getPrimaryKey() == pk) {
			return true;
		}
		else {
			return false;
		}
	}

	public int hashCode() {
		return (int)getPrimaryKey();
	}

	public String toString() {
		StringBundler sb = new StringBundler(33);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", id=");
		sb.append(getId());
		sb.append(", title=");
		sb.append(getTitle());
		sb.append(", content=");
		sb.append(getContent());
		sb.append(", language=");
		sb.append(getLanguage());
		sb.append(", questionOrder=");
		sb.append(getQuestionOrder());
		sb.append(", sentDate=");
		sb.append(getSentDate());
		sb.append(", sentByUser=");
		sb.append(getSentByUser());
		sb.append(", senderEmail=");
		sb.append(getSenderEmail());
		sb.append(", questionType=");
		sb.append(getQuestionType());
		sb.append(", modifiedByUser=");
		sb.append(getModifiedByUser());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", hitCount=");
		sb.append(getHitCount());
		sb.append(", approved=");
		sb.append(getApproved());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(52);

		sb.append("<model><model-name>");
		sb.append("com.vportal.portlet.vfaq.model.FAQQuestion");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>title</column-name><column-value><![CDATA[");
		sb.append(getTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>content</column-name><column-value><![CDATA[");
		sb.append(getContent());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>language</column-name><column-value><![CDATA[");
		sb.append(getLanguage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>questionOrder</column-name><column-value><![CDATA[");
		sb.append(getQuestionOrder());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sentDate</column-name><column-value><![CDATA[");
		sb.append(getSentDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sentByUser</column-name><column-value><![CDATA[");
		sb.append(getSentByUser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>senderEmail</column-name><column-value><![CDATA[");
		sb.append(getSenderEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>questionType</column-name><column-value><![CDATA[");
		sb.append(getQuestionType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedByUser</column-name><column-value><![CDATA[");
		sb.append(getModifiedByUser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>hitCount</column-name><column-value><![CDATA[");
		sb.append(getHitCount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approved</column-name><column-value><![CDATA[");
		sb.append(getApproved());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private String _uuid;
	private String _originalUuid;
	private long _id;
	private long _originalId;
	private boolean _setOriginalId;
	private String _title;
	private String _content;
	private String _language;
	private int _questionOrder;
	private Date _sentDate;
	private String _sentByUser;
	private String _senderEmail;
	private String _questionType;
	private String _modifiedByUser;
	private Date _modifiedDate;
	private int _hitCount;
	private boolean _approved;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userUuid;
	private transient ExpandoBridge _expandoBridge;
}